<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdSalir.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAAy1JREFUWEftlIlLVEEcx/ubtEzFu5MuEdE0rbRIa01R17bWe71KMY/MK10hO0TE
        EEmxQ8IgqLS0xWPXdU9fZpZkmaASfOM78SSMbLdjJdgvfHk7897M9zO/nZktW9xy6zcV8tAD9Pp+l4jB
        uS+iNweAoVeNuWi2lboegIHVkzlom21AvbnItQAMqzFpcP11lTCr4DIAsXJTnih7i1QmXDGpdg0AQyrN
        Wai3a9BoL0DTdBG0UrH4LZ+Enzn4gadw0L2tCOzbhoAeL+eAOUm5WYVqqxp1tmzhxuk8NEn50EqaNbPN
        fr6vtalRZVGLcaWmNBQaU5FrSEbmRJJzAAwvNCrEJBUWJWqsKjF543QmmqQsaKXsNbPNfr7nd/ye44qN
        ycgznIF6PEHY/663YwAMD3++FUde+OC0bidUE2EonDqKSqsC9fY0aCX1D74mqVBnz8AVWxrKzcm4ZFKg
        wJiIc+MxSBg5hJihXfDrdgCA4WHPPEV4/Ig/kkZ3QDm+F5mGA9BMhaHIFI5LlghctkWj2h4nXGE7hjJL
        DEpMUcg3RkCtD0PK6B4xPmpoO0KfeuDwYAB8u3w2BmA4P+ag78OzJw+K4DJrpAi+Yo9FrXQUDTPHxZNt
        9hOMkITluDO6EMQN+yFy0AvxL/fA547vxgAUIU6OBIvB34fLwddm4tAyexLX355ac/ObEwKmejpGQMoQ
        aWO7kaALQuxLHyh0ofDu9Ps1AEWILEMELhj2i8k4KVfKoJtziWh/r0Dn/Nk1s00QwhFSroRKv09UkdVM
        H4uEd4e/YwAUIWrtKbhoiRArk8MZ2L2Qir5PStxfzBBPttkvQ7BarJpchVOvAqHWx8KrPcBxAIoQnXMl
        YlJOzpDej+l4vKSB9GUA+tXbmFi5Bd1yK4aWWvBksRH9CzXomS9Hx1wxWmdyxMn4diqSnQegCNH7rhad
        75Xo+pAiVj24XCYA5NuN5hnnMeNO52aj+Z+z7Aymt7UFOQ9AEaJvVouBxVL0fz6PkZUKAeDUzfan4p0+
        unxDeHgzACiWnAAMpx262f62uGpC2FYfbQ4AxQ1HiF9erf9S8m5f3++WW/+dvgIF+CgIQ78iIQAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>